user nginx;
worker_processes 4;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 20480;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    keepalive_timeout   10;


    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       8080 default_server;
        listen       [::]:8080 default_server;

        # location / {
        #     root   /var/www/top;
        # }

        location /hoge {
            alias /var/www/hoge;
        }

        location /fuga {
            alias  /var/www/fuga;
            index fuga.html;
        }

        location /next/ {
            set $context "/next/";

            # See http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
            proxy_pass          http://next:3000/;

            # See http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect
            # proxy_redirect    $scheme://$host/    $context;       # Webアプリのレスポンスに応じて追加
            proxy_redirect      / $context;
            proxy_redirect      default;
            # proxy_redirect    http://next:3000/ $context;      # default と同義

            proxy_set_header    Upgrade             $http_upgrade;
            # See https://qiita.com/no1zy_sec/items/dfccd91cf76bf73b7754
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;
            proxy_set_header    X-Forwarded-Host    $http_host;
            proxy_set_header    X-Forwarded-Port    $server_port;
            proxy_set_header    Accept-Encoding     "";             # sub_filter のためにレスポンス非圧縮

            # See http://nginx.org/en/docs/http/ngx_http_sub_module.html
            sub_filter  'href="/' 'href="$context';
            sub_filter  'src="/' 'src="$context';
            sub_filter  'url("/' 'url("$context';
            sub_filter  'action="/' 'action="$context';
            sub_filter  'href=\'/' 'href=\'$context';
            sub_filter  'src=\'/' 'src=\'$context';
            sub_filter  'url(\'/' 'url(\'$context';
            sub_filter  'action=\'/' 'action=\'$context';
            sub_filter  'http://$proxy_host/' '$scheme://$host$context';
            sub_filter  'http:\/\/$proxy_host\/' '$scheme:\/\/$host\/next\/';
            # sub_filter  '//$host/' '//$host$context';             # Webアプリのレスポンスに応じて選択
            # sub_filter  '\/\/$host\/' '\/\/$host\/next\/';
            sub_filter_once off;

            # See https://qiita.com/cubicdaiya/items/2763ba2240476ab1d9dd
            # See also http://nginx.org/en/docs/http/ngx_http_gzip_module.html
            gzip            on;
            gzip_vary       on;
            gzip_min_length 1000;
            gzip_types      text/css text/javascript application/javascript application/xml application/json;
        }
 
        location /google {
            proxy_set_header Host google.com;
            proxy_pass https://www.google.com/;
            proxy_redirect off;
        }
    }
}